#!/bin/sh

### BEGIN INIT INFO
# Provides:          groundstation
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts Groundstation.
# Description:       Starts Groundstation using start-stop-daemon.
### END INIT INFO

# We got this Debian-style initscript from here:
# https://github.com/ether/etherpad-lite/wiki/How-to-deploy-Etherpad-Lite-as-a-service
# I've modified it to manage Groundstation.
# --DrWho

PATH="/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin"
AIRSHIPD_LOG="/var/log/groundstation/airshipd.log"
STATIOND_LOG="/var/log/groundstation/stationd.log"
GROUNDSTATION_DIR="/opt/groundstation"
STATIOND="stationd.sh"
AIRSHIPD="airshipd.sh"
USER="groundstation"
GROUP="groundstation"
DESC="Groundstation"
NAME="Groundstation"

set -e

. /lib/lsb/init-functions

start() {
  echo "Starting stationd of $DESC..."
  start-stop-daemon --start --chuid "$USER:$GROUP" --background \
      --make-pidfile --exec $GROUNDSTATION_DIR/$STATIOND -- --pidfile \
      /var/run/stationd.pid $LOGFILE || true

  echo "Starting airshipd of $DESC..."
  start-stop-daemon --start --chuid "$USER:$GROUP" --background \
      --make-pidfile --exec $GROUNDSTATION_DIR/$AIRSHIPD -- --pidfile \
      /var/run/airshipd.pid $LOGFILE || true

  echo "Done."
}

#We need this function to ensure the whole process tree will be killed.
killtree() {
    local _pid=$1
    local _sig=${2-TERM}
    for _child in $(ps -o pid --no-headers --ppid ${_pid}); do
        killtree ${_child} ${_sig}
    done
    kill -${_sig} ${_pid}
}

stop() {
  echo "Stopping stationd $DESC..."
   while test -d /proc/$(cat /var/run/stationd.pid); do
    killtree $(cat /var/run/stationd.pid) 15
    sleep 1
  done
  rm /var/run/stationd.pid

  echo "Stopping airshipd $DESC..."
   while test -d /proc/$(cat /var/run/airshipd.pid); do
    killtree $(cat /var/run/airshipd.pid) 15
    sleep 1
  done
  rm /var/run/airshipd.pid

  echo "Done."
}

status() {
  status_of_proc -p /var/run/stationd.pid "" "groundstation" && exit 0 || \
    exit $?

  status_of_proc -p /var/run/airshipd.pid "" "groundstation" && exit 0 || \
    exit $?
}

case "$1" in
  start)
      start
      ;;
  stop)
      stop
      ;;
  restart)
      stop
      start
      ;;
  status)
      status
      ;;
  *)
      echo "Usage: $NAME {start|stop|restart|status}" >&2
      exit 1
      ;;
esac

exit 0

